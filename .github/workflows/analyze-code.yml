name: Update Lines of Code in Readme

on:
  workflow_dispatch:

jobs:
  count-lines:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq cloc locales
          sudo locale-gen en_US.UTF-8

      - name: Fetch and Clone Repositories
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          USERNAME="sathwikhbhat"

          REPOS=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/user/repos?per_page=100" | jq -r '.[] | select(.fork == false) | .full_name') || echo "Error fetching repositories"

          mkdir -p public-repos
          cd public-repos

          for REPO in $REPOS; do
            REPO_URL="https://github.com/$REPO.git"
            AUTHENTICATED_REPO=$(echo "$REPO_URL" | sed "s/https:\/\//https:\/\/$GH_PAT@/g")

            DEFAULT_BRANCH=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/repos/$REPO" | jq -r '.default_branch')

            echo "Cloning $REPO (default branch: $DEFAULT_BRANCH)..."
            git clone --branch "$DEFAULT_BRANCH" --single-branch "$AUTHENTICATED_REPO" "$(basename $REPO)-$DEFAULT_BRANCH" || echo "Failed to clone $REPO."
          done

          echo "Calculating lines of code..."
          mkdir -p ../output
          cloc . --exclude-ext=html,htm,css,json,md,markdown,xml,svg,scss,yaml,toml,csv,txt,yml,sass,lock,log,properties,HTML,HTM,CSS,JSON,MD,MARKDOWN,XML,SVG,SCSS,YAML,TOML,CSV,TXT,YML,SASS,LOCK,LOG,PROPERTIES --exclude-lang=XML,Properties --json > ../output/cloc-output.json
      - name: Commit and Push Output
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          TOTAL_LINES=$(jq '.SUM.code // 0' output/cloc-output.json)

          format_number() {
            export LC_ALL="en_US.UTF-8"
            printf "%'d\n" $1
          }

          # Build sorted breakdown as CSV: lang,lines
          LANG_BREAKDOWN=$(jq -r 'to_entries
            | map(select(.key != "header" and .key != "SUM"))
            | map({lang: .key, lines: .value.code})
            | map(select(.lines > 1))
            | sort_by(-.lines)[]
            | "\(.lang),\(.lines)"' output/cloc-output.json)

          FORMATTED_BREAKDOWN=""
          while IFS=, read -r LANG LINES; do
            FORMATTED=$(format_number $LINES)
            FORMATTED_BREAKDOWN+="$LANG  -->  $FORMATTED lines"$'\n'
          done <<< "$LANG_BREAKDOWN"

          FORMATTED_TOTAL=$(format_number $TOTAL_LINES)

          CODE_BLOCK="\`\`\`
          [ LANGUAGES BREAKDOWN ]

          $FORMATTED_BREAKDOWN
          [ TOTAL LINES OF CODE: $FORMATTED_TOTAL ]
          \`\`\`"

          echo "$CODE_BLOCK" > temp_block.txt
          sed -i '/<!-- LANGUAGES BREAKDOWN START -->/,/<!-- LANGUAGES BREAKDOWN END -->/{
              //!d
              /<!-- LANGUAGES BREAKDOWN START -->/r temp_block.txt
          }' README.md

          rm temp_block.txt

          git add output/cloc-output.json README.md
          git commit -m "Updated README.md and cloc-output.json with detailed language breakdown" || echo "No changes to commit"
          git push origin HEAD
