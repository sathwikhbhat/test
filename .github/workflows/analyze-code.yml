name: Update Lines of Code in Readme

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  count-lines:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq cloc locales
          sudo locale-gen en_US.UTF-8

      - name: Fetch and Clone Repositories
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          USERNAME="sathwikhbhat"

          REPOS=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/user/repos?per_page=100" \
            | jq -r '.[] | select(.fork == false) | .full_name') || echo "Error fetching repositories"

          mkdir -p public-repos
          cd public-repos

          for REPO in $REPOS; do
            REPO_URL="https://github.com/$REPO.git"
            AUTHENTICATED_REPO=$(echo "$REPO_URL" | sed "s/https:\/\//https:\/\/$GH_PAT@/g")
            DEFAULT_BRANCH=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/repos/$REPO" | jq -r '.default_branch')
            git clone --branch "$DEFAULT_BRANCH" --single-branch "$AUTHENTICATED_REPO" "$(basename $REPO)-$DEFAULT_BRANCH" || echo "Failed to clone a repository"
          done

          echo "Calculating lines of code..."
          mkdir -p ../output
          cloc . \
            --exclude-lang=HTML,CSS,JSON,Markdown,XML,SVG,SCSS,YAML,TOML \
            --json > ../output/cloc-output.json

      - name: Commit and Push Output
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          TOTAL_LINES=$(jq '.SUM.code // 0' output/cloc-output.json)

          format_number() {
            export LC_ALL="en_US.UTF-8"
            printf "%'d\n" $1
          }

          FORMATTED_TOTAL=$(format_number $TOTAL_LINES)

          # Build dynamic breakdown: exclude SUM and sort by line count
          LANGS=$(jq -r 'to_entries | map(select(.key != "SUM" and (.value.code // 0) > 0)) | sort_by(-(.value.code // 0))[] | "\(.key) --> \(.value.code // 0)"' output/cloc-output.json)

          # Format each line with commas
          CODE_BLOCK="[\n"
          while IFS= read -r line; do
            LANG=$(echo "$line" | cut -d' ' -f1)
            COUNT=$(echo "$line" | grep -oE '[0-9]+$')
            FORMATTED_COUNT=$(format_number $COUNT)
            CODE_BLOCK+="  $LANG   --> $FORMATTED_COUNT lines\n"
          done <<< "$LANGS"

          CODE_BLOCK+="\n  [ TOTAL LINES OF CODE: $FORMATTED_TOTAL ]\n"

          # Add markdown code block
          CODE_BLOCK="\`\`\`\n[ LANGUAGES BREAKDOWN ]\n\n${CODE_BLOCK}\`\`\`"

          echo -e "$CODE_BLOCK" > temp_block.txt

          sed -i '/<!-- LANGUAGES BREAKDOWN START -->/,/<!-- LANGUAGES BREAKDOWN END -->/{
              //!d
              /<!-- LANGUAGES BREAKDOWN START -->/r temp_block.txt
          }' README.md

          rm temp_block.txt

          git add output/cloc-output.json README.md
          git commit -m "chore: update README and cloc-output.json with latest code stats" || echo "No changes to commit"
          git push origin HEAD
