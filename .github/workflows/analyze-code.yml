name: Update Lines of Code in Readme

on:
  workflow_dispatch:   # Only runs when triggered manually

jobs:
  count-lines:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq cloc locales
          sudo locale-gen en_US.UTF-8

      - name: Fetch and Clone Repositories
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          USERNAME="sathwikhbhat"
          REPOS=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/user/repos?per_page=100" \
            | jq -r '.[] | select(.fork == false) | .full_name')

          mkdir -p public-repos
          cd public-repos

          for REPO in $REPOS; do
            REPO_URL="https://github.com/$REPO.git"
            AUTHENTICATED_REPO=$(echo "$REPO_URL" | sed "s/https:\/\//https:\/\/$GH_PAT@/g")
            DEFAULT_BRANCH=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/repos/$REPO" \
              | jq -r '.default_branch')
            git clone --branch "$DEFAULT_BRANCH" --single-branch "$AUTHENTICATED_REPO" "$(basename $REPO)-$DEFAULT_BRANCH" \
              || echo "Failed to clone $REPO"
          done

          echo "Calculating lines of code..."
          mkdir -p ../output
          cloc . \
            --exclude-lang=HTML,CSS,JSON,Markdown,XML,SVG,SCSS,YAML,TOML,CSV \
            --json > ../output/cloc-output.json

      - name: Commit and Push Output
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          JAVA_LINES=$(jq '.Java.code // 0' output/cloc-output.json)
          JS_LINES=$(jq '.JavaScript.code // 0' output/cloc-output.json)
          PYTHON_LINES=$(jq '.Python.code // 0' output/cloc-output.json)

          OTHERS=$(jq '[to_entries | map(select(.key != "SUM"
              and .key != "Java"
              and .key != "JavaScript"
              and .key != "Python"
              and (.value.code // 0) > 0)) | .[].value.code] | add // 0' output/cloc-output.json)

          format_number() {
            export LC_ALL="en_US.UTF-8"
            printf "%'d\n" $1
          }

          F_JAVA=$(format_number $JAVA_LINES)
          F_JS=$(format_number $JS_LINES)
          F_PYTHON=$(format_number $PYTHON_LINES)
          F_OTHERS=$(format_number $OTHERS)
          F_TOTAL=$(format_number $(jq '.SUM.code // 0' output/cloc-output.json))

          CODE_BLOCK="\`\`\`
          [ LANGUAGES BREAKDOWN ]

          Java         --> $F_JAVA lines
          JavaScript   --> $F_JS lines
          Python       --> $F_PYTHON lines
          Others       --> $F_OTHERS lines

          [ TOTAL LINES OF CODE: $F_TOTAL ]
          \`\`\`"

          echo "$CODE_BLOCK" > temp_block.txt
          sed -i '/<!-- LANGUAGES BREAKDOWN START -->/,/<!-- LANGUAGES BREAKDOWN END -->/{
              //!d
              /<!-- LANGUAGES BREAKDOWN START -->/r temp_block.txt
          }' README.md
          rm temp_block.txt

          git add output/cloc-output.json README.md
          git commit -m "chore: update README and cloc-output.json with latest code stats" || echo "No changes to commit"
          git push origin HEAD
